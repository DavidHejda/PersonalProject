type Query {
    getAllTasks: [TaskResponse]
    getTaskById(id: ID!): TaskResponse
}

type Mutation {
    createTask(input: TaskRequest): TaskResponse
    deleteTask(id: ID!): Boolean
    updateTask(updateTask: UpdateTaskRequest): TaskResponse
}

input TaskRequest {
    subject: String
    description: String
    deadline: String
    importance: TaskImportance
    assignee: String
    state: TaskStateEnum
    notes: String
}

input UpdateTaskRequest {
    id: ID!
    subject: String
    description: String
    deadline: String
    importance: TaskImportance
    assignee: String
    state: TaskStateEnum
    notes: String
}

    type TaskResponse {
        id: ID!
        subject: String
        description: String
        deadline: String
        importance: TaskImportance
        assignee: String
        state: TaskStateEnum
        notes: String
    }

enum TaskImportance {
    HIGH
    MEDIUM
    LOW
}

enum TaskStateEnum {
    NEW
    IN_PROGRESS
    DONE
}



